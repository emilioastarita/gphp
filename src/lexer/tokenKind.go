package lexer

//go:generate stringer -type=TokenKind
type TokenKind int

const (
	Unknown TokenKind = iota
	EndOfFileToken
	Name
	VariableName
	SkippedToken
	MissingToken
	QualifiedName
	AbstractKeyword
	AndKeyword
	ArrayKeyword
	AsKeyword
	BreakKeyword
	CallableKeyword
	CaseKeyword
	CatchKeyword
	ClassKeyword
	CloneKeyword
	ConstKeyword
	ContinueKeyword
	DeclareKeyword
	DefaultKeyword
	DieKeyword
	DoKeyword
	EchoKeyword
	ElseKeyword
	ElseIfKeyword
	EmptyKeyword
	EndDeclareKeyword
	EndForKeyword
	EndForEachKeyword
	EndIfKeyword
	EndSwitchKeyword
	EndWhileKeyword
	EvalKeyword
	ExitKeyword
	ExtendsKeyword
	FinalKeyword
	FinallyKeyword
	ForKeyword
	ForeachKeyword
	FunctionKeyword
	GlobalKeyword
	GotoKeyword
	IfKeyword
	ImplementsKeyword
	IncludeKeyword
	IncludeOnceKeyword
	InstanceOfKeyword
	InsteadOfKeyword
	InterfaceKeyword
	IsSetKeyword
	ListKeyword
	NamespaceKeyword
	NewKeyword
	OrKeyword
	PrintKeyword
	PrivateKeyword
	ProtectedKeyword
	PublicKeyword
	RequireKeyword
	RequireOnceKeyword
	ReturnKeyword
	StaticKeyword
	SwitchKeyword
	ThrowKeyword
	TraitKeyword
	TryKeyword
	UnsetKeyword
	UseKeyword
	VarKeyword
	WhileKeyword
	XorKeyword
	YieldKeyword
	YieldFromKeyword
	OpenBracketToken
	CloseBracketToken
	OpenParenToken
	CloseParenToken
	OpenBraceToken
	CloseBraceToken
	DotToken
	ArrowToken
	PlusPlusToken
	MinusMinusToken
	AsteriskAsteriskToken
	AsteriskToken
	PlusToken
	MinusToken
	TildeToken
	ExclamationToken
	DollarToken
	SlashToken
	PercentToken
	LessThanLessThanToken
	GreaterThanGreaterThanToken
	LessThanToken
	GreaterThanToken
	LessThanEqualsToken
	GreaterThanEqualsToken
	EqualsEqualsToken
	EqualsEqualsEqualsToken
	ExclamationEqualsToken
	ExclamationEqualsEqualsToken
	CaretToken
	BarToken
	AmpersandToken
	AmpersandAmpersandToken
	BarBarToken
	ColonToken
	SemicolonToken
	EqualsToken
	AsteriskAsteriskEqualsToken
	AsteriskEqualsToken
	SlashEqualsToken
	PercentEqualsToken
	PlusEqualsToken
	MinusEqualsToken
	DotEqualsToken
	LessThanLessThanEqualsToken
	GreaterThanGreaterThanEqualsToken
	AmpersandEqualsToken
	CaretEqualsToken
	BarEqualsToken
	CommaToken
	QuestionQuestionToken
	LessThanEqualsGreaterThanToken
	DotDotDotToken
	BackslashToken
	ColonColonToken
	DoubleArrowToken         // TODO missing from spec
	LessThanGreaterThanToken // TODO missing from spec
	AtSymbolToken
	BacktickToken
	QuestionToken
	IntegerLiteralToken
	OctalLiteralToken
	HexadecimalLiteralToken
	BinaryLiteralToken
	FloatingLiteralToken
	InvalidOctalLiteralToken
	InvalidHexadecimalLiteral
	InvalidBinaryLiteral
	StringLiteralToken

	// RESERVED WORDS
	IntReservedWord
	FloatReservedWord
	TrueReservedWord
	StringReservedWord
	BoolReservedWord
	NullReservedWord
	ScriptSectionStartTag
	ScriptSectionEndTag

	// TODO how to handle incremental parsing w/ this?
	ScriptSectionPrependedText
	VoidReservedWord
	FalseReservedWord
	MemberName
	Expression
	BinaryReservedWord // TODO better way
	BooleanReservedWord
	DoubleReservedWord
	IntegerReservedWord
	ObjectReservedWord
	RealReservedWord
	ReturnType
	InlineHtml

	DollarOpenCurly
	EncapsedAndWhitespace
	SingleQuoteToken
	DoubleQuoteToken
	DollarOpenBraceToken
	OpenBraceDollarToken
	CastToken
	HeredocStart
	HeredocEnd
	StringVarname
	UnsetCastToken
	StringCastToken
	ObjectCastToken
	IntCastToken
	DoubleCastToken
	BoolCastToken
	ArrayCastToken
	CommentToken
	DocCommentToken

	// todo review:
	UnterminatedStringLiteralToken
	UnterminatedNoSubstitutionTemplateLiteral
	UnterminatedTemplateStringEnd
	NoSubstitutionTemplateLiteral
	TemplateStringStart
	TemplateStringEnd
)
